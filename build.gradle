buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    ext {
        micronautVersion = "1.1.3"
        kotlinVersion    = "1.3.31"
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm"               version "1.3.31"
    id "io.spring.dependency-management"        version "1.0.6.RELEASE"
    id "org.jetbrains.kotlin.kapt"              version "1.3.31"
    id "org.jetbrains.kotlin.plugin.allopen"    version "1.3.31"
    id "com.github.johnrengelman.shadow"        version "4.0.2"
    id "org.sonarqube"                          version "2.7.1"
    id "org.jetbrains.kotlin.plugin.jpa"        version "1.3.31"
    id "application"
    id "jacoco"
    id "io.gitlab.arturbosch.detekt"            version "1.0.0-RC14"
    id 'com.palantir.docker'                    version "0.22.1"
}

allOpen {
    annotation("com.aegonlife.bff.service.customer.annotation.Open")
}

group   "com.tw"
version "1.0-SNAPSHOT"

repositories {
    mavenCentral()
    jcenter()   //Required for detekt
}

mainClassName = "com.tw.Application"

dependencyManagement {
    imports {
        mavenBom "io.micronaut:micronaut-bom:$micronautVersion"
    }
}

dependencies {
    implementation          "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile                 "io.micronaut.configuration:micronaut-jdbc-tomcat"

    compile                 "io.micronaut:micronaut-runtime"
    compile                 "io.micronaut:micronaut-http-client"
    compile                 "io.micronaut:micronaut-http-server-netty"
    compile                 "io.micronaut.configuration:micronaut-liquibase"
    compile                 "io.micronaut.configuration:micronaut-hibernate-jpa"

    kapt                    "io.micronaut:micronaut-inject-java"

    kaptTest                "io.micronaut:micronaut-inject-java"

    testCompile             "io.micronaut.test:micronaut-test-junit5"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"

    runtime                 "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
    runtime                 "ch.qos.logback:logback-classic:1.2.3"
    runtime                 "com.h2database:h2"

    testCompile             "org.junit.jupiter:junit-jupiter-api:5.3.2"
    testCompile             "org.assertj:assertj-core:3.12.2"

    testCompile             "io.mockk:mockk:1.9.3"
    testCompile             "au.com.dius:pact-jvm-consumer-junit5_2.12:3.6.7"
    testCompile             "au.com.dius:pact-jvm-provider-junit5_2.12:3.6.7"

    testRuntime             "org.junit.jupiter:junit-jupiter-engine:5.3.2"
}

tasks.shadowJar {
    mergeServiceFiles()
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

tasks.jar {
    enabled = false
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
    }
}

detekt {
    input = files("src/main/kotlin")
    config = files("src/main/resources/default-detekt-config.yml")
}

docker {
    name 'customer-service-bff:latest'
    dockerfile file('Dockerfile')
    files "build/libs/customer-service-bff-1.0-SNAPSHOT.jar"
    pull true
    noCache true
}